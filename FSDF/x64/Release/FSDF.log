cl : Command line warning D9007: '/Gm' requires '/Zi or /ZI'; option ignored
  glad.c
cl : Command line warning D9007: '/Gm' requires '/Zi or /ZI'; option ignored
  fsdf.cpp
fsdf.cpp(17): warning C4018: '<': signed/unsigned mismatch
fsdf.cpp(20): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
fsdf.cpp(101): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
fsdf.cpp(109): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
fsdf.cpp(152): warning C4018: '<': signed/unsigned mismatch
fsdf.cpp(296): warning C4018: '<': signed/unsigned mismatch
fsdf.cpp(322): warning C4553: '==': operator has no effect; did you intend '='?
  main.cpp
c:\libigl-master\include\igl\opengl\bind_vertex_attrib_array.cpp(21): warning C4244: 'argument': conversion from 'Eigen::Index' to 'GLint', possible loss of data
c:\libigl-master\include\igl\opengl\MeshGL.cpp(144): warning C4244: 'argument': conversion from 'Eigen::Index' to 'GLsizei', possible loss of data
c:\libigl-master\include\igl\opengl\MeshGL.cpp(152): warning C4244: 'argument': conversion from 'Eigen::Index' to 'GLsizei', possible loss of data
c:\libigl-master\include\igl\opengl\MeshGL.cpp(157): warning C4244: 'argument': conversion from 'Eigen::Index' to 'GLsizei', possible loss of data
c:\libigl-master\include\igl\opengl\../material_colors.h(16): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\libigl-master\include\igl\opengl\../material_colors.h(16): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(17): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\libigl-master\include\igl\opengl\../material_colors.h(17): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(18): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\libigl-master\include\igl\opengl\../material_colors.h(18): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(23): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\libigl-master\include\igl\opengl\../material_colors.h(23): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(24): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\libigl-master\include\igl\opengl\../material_colors.h(24): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(25): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\libigl-master\include\igl\opengl\../material_colors.h(25): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(26): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\libigl-master\include\igl\opengl\../material_colors.h(26): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(39): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\libigl-master\include\igl\opengl\../material_colors.h(39): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(40): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\libigl-master\include\igl\opengl\../material_colors.h(40): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(43): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\libigl-master\include\igl\opengl\../material_colors.h(43): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(44): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\libigl-master\include\igl\opengl\../material_colors.h(44): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(45): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\libigl-master\include\igl\opengl\../material_colors.h(45): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(47): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(48): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(49): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(50): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(51): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(52): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(54): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\../material_colors.h(55): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\libigl-master\include\igl\opengl\ViewerData.cpp(263): warning C4244: 'initializing': conversion from 'Eigen::Index' to 'int', possible loss of data
c:\libigl-master\include\igl\opengl\ViewerData.cpp(312): warning C4244: 'initializing': conversion from 'Eigen::Index' to 'int', possible loss of data
c:\libigl-master\include\igl\opengl\ViewerData.cpp(333): warning C4244: 'initializing': conversion from 'Eigen::Index' to 'int', possible loss of data
c:\libigl-master\include\igl\opengl\ViewerData.cpp(650): warning C4244: '=': conversion from 'Eigen::Index' to 'int', possible loss of data
c:\libigl-master\include\igl\opengl\ViewerData.cpp(651): warning C4244: '=': conversion from 'Eigen::Index' to 'int', possible loss of data
c:\libigl-master\include\igl\opengl\ViewerCore.cpp(33): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\opengl\ViewerCore.cpp(67): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\opengl\ViewerCore.cpp(84): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\opengl\ViewerCore.cpp(121): warning C4244: 'argument': conversion from 'float' to 'GLsizei', possible loss of data
c:\libigl-master\include\igl\opengl\ViewerCore.cpp(121): warning C4244: 'argument': conversion from 'float' to 'GLint', possible loss of data
c:\libigl-master\include\igl\opengl\ViewerCore.cpp(139): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\opengl\ViewerCore.cpp(144): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\opengl\ViewerCore.cpp(145): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\opengl\ViewerCore.cpp(263): warning C4244: 'initializing': conversion from 'Eigen::Index' to 'unsigned int', possible loss of data
c:\libigl-master\include\igl\opengl\ViewerCore.cpp(264): warning C4244: 'initializing': conversion from 'Eigen::Index' to 'unsigned int', possible loss of data
c:\libigl-master\include\igl\opengl\ViewerCore.cpp(300): warning C4244: 'argument': conversion from 'unsigned int' to 'const float', possible loss of data
c:\libigl-master\include\igl\writeOFF.cpp(70): warning C4003: not enough actual parameters for macro 'RGB'
c:\libigl-master\include\igl\EPS.h(16): warning C4305: 'initializing': truncation from 'double' to 'float'
c:\libigl-master\include\igl\EPS.h(17): warning C4305: 'initializing': truncation from 'double' to 'float'
c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(94): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(95): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(103): warning C4244: 'argument': conversion from 'double' to 'int', possible loss of data
c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(112): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(158): warning C4244: 'argument': conversion from 'float' to 'int', possible loss of data
c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(617): warning C4244: 'argument': conversion from 'double' to 'const float', possible loss of data
c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(710): warning C4244: 'argument': conversion from 'float' to 'const int', possible loss of data
c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(725): warning C4244: 'argument': conversion from 'int' to 'const float', possible loss of data
c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(726): warning C4244: 'argument': conversion from 'int' to 'const float', possible loss of data
c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(764): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(859): warning C4244: 'argument': conversion from 'double' to 'int', possible loss of data
c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(866): warning C4244: 'argument': conversion from 'int' to 'const float', possible loss of data
main.cpp(96): warning C4018: '<': signed/unsigned mismatch
main.cpp(97): warning C4267: 'argument': conversion from 'size_t' to 'const int', possible loss of data
main.cpp(130): warning C4018: '<': signed/unsigned mismatch
c:\libigl-master\include\igl\ortho.cpp(21): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
  c:\libigl-master\include\igl\opengl\ViewerCore.cpp(140): note: see reference to function template instantiation 'void igl::ortho<Eigen::Matrix<float,4,4,0,4,4>>(const float,const float,const float,const float,const float,const float,Eigen::PlainObjectBase<Eigen::Matrix<float,4,4,0,4,4>> &)' being compiled
c:\libigl-master\include\igl\ortho.cpp(22): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\ortho.cpp(23): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\frustum.cpp(20): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
  c:\libigl-master\include\igl\opengl\ViewerCore.cpp(146): note: see reference to function template instantiation 'void igl::frustum<Eigen::Matrix<float,4,4,0,4,4>>(const float,const float,const float,const float,const float,const float,Eigen::PlainObjectBase<Eigen::Matrix<float,4,4,0,4,4>> &)' being compiled
c:\libigl-master\include\igl\frustum.cpp(21): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\frustum.cpp(26): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\two_axis_valuator_fixed_up.cpp(28): warning C4244: 'argument': conversion from 'double' to 'const float', possible loss of data
  c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(714): note: see reference to function template instantiation 'void igl::two_axis_valuator_fixed_up<float,float>(const int,const int,const double,const Eigen::Quaternion<float,0> &,const int,const int,const int,const int,Eigen::Quaternion<float,0> &)' being compiled
c:\libigl-master\include\igl\two_axis_valuator_fixed_up.cpp(38): warning C4244: 'argument': conversion from 'double' to 'const float', possible loss of data
c:\libigl-master\include\igl\snap_to_canonical_view_quat.cpp(106): warning C4244: 'argument': conversion from 'const double' to 'const float', possible loss of data
  c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(876): note: see reference to function template instantiation 'bool igl::snap_to_canonical_view_quat<float,float>(const Eigen::Quaternion<float,0> &,const double,Eigen::Quaternion<float,0> &)' being compiled
c:\libigl-master\include\igl\doublearea.cpp(25): warning C4244: 'initializing': conversion from 'Eigen::EigenBase<Derived>::Index' to 'int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
  main.cpp(104): note: see reference to function template instantiation 'void igl::doublearea<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,1,0,-1,1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,1,0,-1,1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
c:\libigl-master\include\igl\doublearea.cpp(25): warning C4244: 'initializing': conversion from 'Eigen::EigenBase<Derived>::Index' to 'const int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
c:\libigl-master\include\igl\doublearea.cpp(53): warning C4267: 'argument': conversion from 'size_t' to 'const int', possible loss of data
c:\libigl-master\include\igl\doublearea.cpp(65): warning C4267: 'argument': conversion from 'size_t' to 'const int', possible loss of data
c:\libigl-master\include\igl\per_face_normals.cpp(21): warning C4244: 'initializing': conversion from 'Eigen::EigenBase<Derived>::Index' to 'int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  c:\libigl-master\include\igl\per_face_normals.cpp(47): note: see reference to function template instantiation 'void igl::per_face_normals<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,3,1,0,3,1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,const Eigen::MatrixBase<Eigen::Matrix<double,3,1,0,3,1>> &,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
  c:\libigl-master\include\igl\opengl\ViewerData.cpp(368): note: see reference to function template instantiation 'void igl::per_face_normals<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
c:\libigl-master\include\igl\list_to_matrix.cpp(22): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
  c:\libigl-master\include\igl\readOFF.cpp(184): note: see reference to function template instantiation 'bool igl::list_to_matrix<double,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              _Ty=double
          ]
  c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(379): note: see reference to function template instantiation 'bool igl::readOFF<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const std::string,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
c:\libigl-master\include\igl\trackball.cpp(121): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
  c:\libigl-master\include\igl\trackball.cpp(157): note: see reference to function template instantiation 'void igl::trackball<Scalarquat>(const double,const double,const Q_type,const Q_type *,const double,const double,const double,const double,Q_type *)' being compiled
          with
          [
              Scalarquat=float,
              Q_type=float
          ]
  c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(706): note: see reference to function template instantiation 'void igl::trackball<float,float>(const double,const double,const double,const Eigen::Quaternion<float,0> &,const double,const double,const double,const double,Eigen::Quaternion<float,0> &)' being compiled
c:\libigl-master\include\igl\trackball.cpp(122): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\trackball.cpp(123): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\trackball.cpp(124): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\trackball.cpp(128): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\trackball.cpp(129): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\trackball.cpp(130): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\trackball.cpp(131): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\unproject.cpp(36): warning C4244: 'initializing': conversion from 'Eigen::EigenBase<Derived>::Index' to 'int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  c:\libigl-master\include\igl\unproject.cpp(65): note: see reference to function template instantiation 'void igl::unproject<Derived,Eigen::Matrix<float,4,4,0,4,4>,Eigen::Matrix<float,4,4,0,4,4>,Eigen::Matrix<float,4,1,0,4,1>,Eigen::Matrix<float,3,1,0,3,1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,4,0,4,4>> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,4,0,4,4>> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,1,0,4,1>> &,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(725): note: see reference to function template instantiation 'Eigen::Matrix<float,3,1,0,3,1> igl::unproject<float>(const Eigen::Matrix<float,3,1,0,3,1> &,const Eigen::Matrix<float,4,4,0,4,4> &,const Eigen::Matrix<float,4,4,0,4,4> &,const Eigen::Matrix<float,4,1,0,4,1> &)' being compiled
c:\libigl-master\include\igl\unproject.cpp(36): warning C4244: 'initializing': conversion from 'Eigen::EigenBase<Derived>::Index' to 'const int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
c:\libigl-master\include\igl\snap_to_canonical_view_quat.cpp(48): warning C4305: 'initializing': truncation from 'double' to 'float'
  c:\libigl-master\include\igl\snap_to_canonical_view_quat.cpp(106): note: see reference to function template instantiation 'bool igl::snap_to_canonical_view_quat<Scalars>(const Q_type *,const Q_type,Q_type *)' being compiled
          with
          [
              Scalars=float,
              Q_type=float
          ]
  c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(876): note: see reference to function template instantiation 'bool igl::snap_to_canonical_view_quat<float,float>(const Eigen::Quaternion<float,0> &,const double,Eigen::Quaternion<float,0> &)' being compiled
c:\libigl-master\include\igl\snap_to_canonical_view_quat.cpp(64): warning C4244: '+=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\snap_to_canonical_view_quat.cpp(92): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\libigl-master\include\igl\readOBJ.cpp(138): warning C4267: 'return': conversion from 'size_t' to 'int', possible loss of data
  c:\libigl-master\include\igl\readOBJ.cpp(38): note: see reference to function template instantiation 'bool igl::readOBJ<double,int>(FILE *,std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &)' being compiled
          with
          [
              _Ty=double
          ]
  c:\libigl-master\include\igl\readOBJ.cpp(261): note: see reference to function template instantiation 'bool igl::readOBJ<double,int>(const std::string,std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &)' being compiled
          with
          [
              _Ty=double
          ]
  c:\libigl-master\include\igl\opengl\glfw\Viewer.cpp(396): note: see reference to function template instantiation 'bool igl::readOBJ<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const std::string,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
c:\libigl-master\include\igl\readOBJ.cpp(142): warning C4267: 'return': conversion from 'size_t' to 'int', possible loss of data
c:\libigl-master\include\igl\readOBJ.cpp(146): warning C4267: 'return': conversion from 'size_t' to 'int', possible loss of data
c:\libigl-master\include\igl\unproject.cpp(36): warning C4244: 'initializing': conversion from 'Eigen::EigenBase<Derived>::Index' to 'int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<float,1,3,1,1,3>
          ]
  c:\libigl-master\include\igl\unproject.cpp(31): note: see reference to function template instantiation 'void igl::unproject<Derived,Eigen::Matrix<float,4,4,0,4,4>,Eigen::Matrix<float,4,4,0,4,4>,Eigen::Matrix<float,4,1,0,4,1>,Eigen::Matrix<float,1,3,1,1,3>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,4,0,4,4>> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,4,0,4,4>> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,1,0,4,1>> &,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<float,1,3,1,1,3>
          ]
  c:\libigl-master\include\igl\unproject.cpp(65): note: see reference to function template instantiation 'void igl::unproject<Derived,Eigen::Matrix<float,4,4,0,4,4>,Eigen::Matrix<float,4,4,0,4,4>,Eigen::Matrix<float,4,1,0,4,1>,Eigen::Matrix<float,3,1,0,3,1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,4,0,4,4>> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,4,0,4,4>> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,1,0,4,1>> &,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
c:\libigl-master\include\igl\unproject.cpp(36): warning C4244: 'initializing': conversion from 'Eigen::EigenBase<Derived>::Index' to 'const int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<float,1,3,1,1,3>
          ]
c:\libigl-master\include\igl\squared_edge_lengths.cpp(19): warning C4244: 'initializing': conversion from 'Eigen::EigenBase<Derived>::Index' to 'int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  c:\libigl-master\include\igl\edge_lengths.cpp(17): note: see reference to function template instantiation 'void igl::squared_edge_lengths<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,3,0,-1,3>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,3,0,-1,3>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
  c:\libigl-master\include\igl\doublearea.cpp(71): note: see reference to function template instantiation 'void igl::edge_lengths<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,3,0,-1,3>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,3,0,-1,3>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
  main.cpp(104): note: see reference to function template instantiation 'void igl::doublearea<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,1,0,-1,1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,1,0,-1,1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
c:\libigl-master\include\igl\squared_edge_lengths.cpp(19): warning C4244: 'initializing': conversion from 'Eigen::EigenBase<Derived>::Index' to 'const int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
c:\libigl-master\include\igl\sort.cpp(30): warning C4244: 'initializing': conversion from 'Eigen::EigenBase<Derived>::Index' to 'int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
  c:\libigl-master\include\igl\doublearea.cpp(162): note: see reference to function template instantiation 'void igl::sort<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
  c:\libigl-master\include\igl\doublearea.cpp(72): note: see reference to function template instantiation 'void igl::doublearea<Derived,Eigen::Matrix<double,-1,1,0,-1,1>>(const Eigen::MatrixBase<Derived> &,const double,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,1,0,-1,1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
c:\libigl-master\include\igl\sort.cpp(43): warning C4244: 'initializing': conversion from 'Eigen::EigenBase<Derived>::Index' to 'int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
c:\libigl-master\include\igl\sort.cpp(74): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
c:\libigl-master\include\igl\sort.cpp(78): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
c:\libigl-master\include\igl\parallel_for.h(108): warning C4244: 'argument': conversion from 'Index' to 'const int', possible loss of data
  c:\libigl-master\include\igl\doublearea.cpp(199): note: see reference to function template instantiation 'bool igl::parallel_for<Index,igl::doublearea::<lambda_b1a7abd05c28a34d0ed904f04b5bb265>>(const Index,const FunctionType &,const ::size_t)' being compiled
          with
          [
              Index=Index,
              FunctionType=igl::doublearea::<lambda_b1a7abd05c28a34d0ed904f04b5bb265>
          ]
c:\libigl-master\include\igl\sort.cpp(167): warning C4244: 'initializing': conversion from 'Eigen::EigenBase<Derived>::Index' to 'int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
  c:\libigl-master\include\igl\sort.cpp(37): note: see reference to function template instantiation 'void igl::sort2<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
  c:\libigl-master\include\igl\doublearea.cpp(162): note: see reference to function template instantiation 'void igl::sort<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
c:\libigl-master\include\igl\sort.cpp(169): warning C4244: 'initializing': conversion from 'Eigen::EigenBase<Derived>::Index' to 'int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
c:\libigl-master\include\igl\sort.cpp(213): warning C4244: 'initializing': conversion from 'Eigen::EigenBase<Derived>::Index' to 'int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
  c:\libigl-master\include\igl\sort.cpp(39): note: see reference to function template instantiation 'void igl::sort3<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
c:\libigl-master\include\igl\sort.cpp(215): warning C4244: 'initializing': conversion from 'Eigen::EigenBase<Derived>::Index' to 'int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
c:\libigl-master\include\igl\parallel_for.h(133): warning C4018: '<': signed/unsigned mismatch
  c:\libigl-master\include\igl\parallel_for.h(109): note: see reference to function template instantiation 'bool igl::parallel_for<Index,igl::parallel_for::<lambda_d67dbb449184d9e5ffb28ae445bd40de>,igl::parallel_for::<lambda_1bd033e34ec547336e29667af7c5b992>,igl::parallel_for::<lambda_d67dbb449184d9e5ffb28ae445bd40de>>(const Index,const PreFunctionType &,const FunctionType &,const AccumFunctionType &,const ::size_t)' being compiled
          with
          [
              Index=Index,
              PreFunctionType=igl::parallel_for::<lambda_d67dbb449184d9e5ffb28ae445bd40de>,
              FunctionType=igl::parallel_for::<lambda_1bd033e34ec547336e29667af7c5b992>,
              AccumFunctionType=igl::parallel_for::<lambda_d67dbb449184d9e5ffb28ae445bd40de>
          ]
  c:\libigl-master\include\igl\doublearea.cpp(199): note: see reference to function template instantiation 'bool igl::parallel_for<Index,igl::doublearea::<lambda_b1a7abd05c28a34d0ed904f04b5bb265>>(const Index,const FunctionType &,const ::size_t)' being compiled
          with
          [
              Index=Index,
              FunctionType=igl::doublearea::<lambda_b1a7abd05c28a34d0ed904f04b5bb265>
          ]
c:\libigl-master\include\igl\colormap.cpp(1359): warning C4244: 'initializing': conversion from 'double' to 'unsigned int', possible loss of data
  c:\libigl-master\include\igl\colormap.cpp(1326): note: see reference to function template instantiation 'void igl::colormap<double>(const double [][3],const T,T &,T &,T &)' being compiled
          with
          [
              T=double
          ]
  c:\libigl-master\include\igl\colormap.cpp(1402): note: see reference to function template instantiation 'void igl::colormap<double>(const igl::ColorMapType,const T,T &,T &,T &)' being compiled
          with
          [
              T=double
          ]
  c:\libigl-master\include\igl\colormap.cpp(1382): note: see reference to function template instantiation 'void igl::colormap<Derived,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const igl::ColorMapType,const Eigen::MatrixBase<Derived> &,const double,const double,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
  c:\libigl-master\include\igl\parula.cpp(30): note: see reference to function template instantiation 'void igl::colormap<Derived,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const igl::ColorMapType,const Eigen::MatrixBase<Derived> &,const bool,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
  c:\libigl-master\include\igl\opengl\ViewerData.cpp(121): note: see reference to function template instantiation 'void igl::parula<Derived,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::MatrixBase<Derived> &,const bool,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
c:\libigl-master\include\igl\colormap.cpp(1360): warning C4244: 'initializing': conversion from 'double' to 'unsigned int', possible loss of data
